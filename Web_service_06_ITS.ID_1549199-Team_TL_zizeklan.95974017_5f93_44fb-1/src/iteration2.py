import telebot
import traceback
import sys
from telebot import types
from config import BOT_TOKEN
from database import init_db, save_user_data, get_last_user_data
from model import predict_stroke_risk

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_data = {}

def safe_execute(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"""
    def wrapper(*args, **kwargs):
        try:
            return func(*args, **kwargs)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}\n{traceback.format_exc()}")
            chat_id = args[0].chat.id if args else None
            if chat_id:
                bot.send_message(chat_id, "–£–ø—Å! –í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞üòî –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
            sys.exit(1)  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    return wrapper

@safe_execute
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_male = types.KeyboardButton("–ú—É–∂—Å–∫–æ–π")
    btn_female = types.KeyboardButton("–ñ–µ–Ω—Å–∫–∏–π")
    markup.add(btn_male, btn_female)
    bot.send_message(
        message.chat.id,
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –≠—Ç–æ—Ç –±–æ—Ç –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç —Ä–∏—Å–∫ —Ä–∞–∑–≤–∏—Ç–∏—è –∏–Ω—Å—É–ª—å—Ç–∞.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª:",
        reply_markup=markup
    )
    user_data[message.chat.id] = {}  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞

@safe_execute
@bot.message_handler(func=lambda message: message.text in ["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"])
def ask_age(message):
    chat_id = message.chat.id
    user_data[chat_id]["gender"] = "Male" if message.text == "–ú—É–∂—Å–∫–æ–π" else "Female"
    
    markup = types.ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏
    bot.send_message(
        chat_id,
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ):",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, ask_hypertension)

@safe_execute
def ask_hypertension(message):
    chat_id = message.chat.id
    try:
        age = int(message.text)
        if age < 0 or age > 99:
            raise ValueError
        user_data[chat_id]["age"] = age
    except ValueError:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç!")
        return bot.register_next_step_handler(message, ask_hypertension)
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_yes = types.KeyboardButton("–î–∞")
    btn_no = types.KeyboardButton("–ù–µ—Ç")
    markup.add(btn_yes, btn_no)
    
    bot.send_message(
        chat_id,
        "–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —É –≤–∞—Å –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏—è/–≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—á–µ—Å–∫–∞—è –±–æ–ª–µ–∑–Ω—å?",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, ask_heart_disease)

@safe_execute
def ask_heart_disease(message):
    chat_id = message.chat.id
    user_data[chat_id]["hypertension"] = 1 if message.text == "–î–∞" else 0
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_yes = types.KeyboardButton("–î–∞")
    btn_no = types.KeyboardButton("–ù–µ—Ç")
    markup.add(btn_yes, btn_no)
    
    bot.send_message(
        chat_id,
        "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–æ–ª–µ–∑–Ω–∏ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã?",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, ask_married)

@safe_execute
def ask_married(message):
    chat_id = message.chat.id
    user_data[chat_id]["heart_disease"] = 1 if message.text == "–î–∞" else 0
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_yes = types.KeyboardButton("–î–∞")
    btn_no = types.KeyboardButton("–ù–µ—Ç")
    markup.add(btn_yes, btn_no)
    
    bot.send_message(
        chat_id,
        "–í—ã –∂–µ–Ω–∞—Ç—ã/–∑–∞–º—É–∂–µ–º?",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, ask_work)

@safe_execute
def ask_work(message):
    chat_id = message.chat.id
    user_data[chat_id]["ever_married"] = 1 if message.text == "–î–∞" else 0
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_self = types.KeyboardButton("1")
    btn_private = types.KeyboardButton("2")
    btn_govt = types.KeyboardButton("3")
    btn_unemployed = types.KeyboardButton("4")
    markup.add(btn_self, btn_private, btn_govt, btn_unemployed)
    
    bot.send_message(
        chat_id,
        "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å:\n"
        "1 - –†–∞–±–æ—Ç–∞—é –Ω–∞ —Å–µ–±—è\n"
        "2 - –†–∞–±–æ—Ç–∞—é –≤ —á–∞—Å—Ç–Ω–æ–π —Ñ–∏—Ä–º–µ\n"
        "3 - –†–∞–±–æ—Ç–∞—é –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —É—á—Ä–µ–∂–¥–µ–Ω–∏–∏\n"
        "4 - –ö–∞–π—Ñ—É—é (–Ω–µ —Ä–∞–±–æ—Ç–∞—é)",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, ask_residence)

@safe_execute
def ask_residence(message):
    chat_id = message.chat.id
    work_type_map = {
        "1": "Self-employed",
        "2": "Private",
        "3": "Govt_job",
        "4": "Unemployed"
    }
    user_data[chat_id]["work_type"] = work_type_map.get(message.text)
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_urban = types.KeyboardButton("–í –≥–æ—Ä–æ–¥–µ")
    btn_rural = types.KeyboardButton("–í —Å–µ–ª—å—Å–∫–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏")
    markup.add(btn_urban, btn_rural)
    
    bot.send_message(
        chat_id,
        "–£–∫–∞–∂–∏—Ç–µ, –≥–¥–µ –≤—ã –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ:",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, ask_glucose)

@safe_execute
def ask_glucose(message):
    chat_id = message.chat.id
    user_data[chat_id]["Residence_type"] = 1 if message.text == "–í –≥–æ—Ä–æ–¥–µ" else 0
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_unknown = types.KeyboardButton("–ù–µ –∑–Ω–∞—é")
    markup.add(btn_unknown)
    
    bot.send_message(
        chat_id,
        "–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã –≤ –∫—Ä–æ–≤–∏ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ 3.3). –ï—Å–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–ª–æ—Å—å, –Ω–∞–∂–º–∏—Ç–µ ¬´–ù–µ –∑–Ω–∞—é¬ª:",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, ask_bmi)

@safe_execute
def ask_bmi(message):
    chat_id = message.chat.id
    if message.text == "–ù–µ –∑–Ω–∞—é":
        user_data[chat_id]["avg_glucose_level"] = None
    else:
        try:
            glucose = float(message.text)
            if glucose < 0 or glucose > 30:
                raise ValueError
            user_data[chat_id]["avg_glucose_level"] = glucose
        except ValueError:
            bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç–µ —á–∏—Å–ª–æ —Å —Ç–æ—á–∫–æ–π, –∞ –Ω–µ –∑–∞–ø—è—Ç–æ–π.")
            return bot.register_next_step_handler(message, ask_bmi)
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_unknown = types.KeyboardButton("–ù–µ –∑–Ω–∞—é")
    markup.add(btn_unknown)
    
    bot.send_message(
        chat_id,
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ò–ú–¢ (–∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞) –≤ —Ñ–æ—Ä–º–∞—Ç–µ 21 –∏–ª–∏ 21.3 –ª–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ ¬´–ù–µ –∑–Ω–∞—é¬ª:",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, ask_smoking)

@safe_execute
def ask_smoking(message):
    chat_id = message.chat.id
    if message.text == "–ù–µ –∑–Ω–∞—é":
        user_data[chat_id]["bmi"] = None
    else:
        try:
            bmi = float(message.text)
            if bmi < 10 or bmi > 50:
                raise ValueError
            user_data[chat_id]["bmi"] = bmi
        except ValueError:
            bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç–µ —á–∏—Å–ª–æ —Å —Ç–æ—á–∫–æ–π, –∞ –Ω–µ –∑–∞–ø—è—Ç–æ–π.")
            return bot.register_next_step_handler(message, ask_bmi)
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_yes = types.KeyboardButton("–î–∞")
    btn_no = types.KeyboardButton("–ù–µ—Ç")
    btn_former = types.KeyboardButton("–†–∞–Ω—å—à–µ –∫—É—Ä–∏–ª")
    markup.add(btn_yes, btn_no, btn_former)
    
    bot.send_message(
        chat_id,
        "–ö—É—Ä–∏—Ç–µ –ª–∏ –≤—ã?",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, process_results)

@safe_execute
def process_results(message):
    chat_id = message.chat.id
    user_data[chat_id]["smoking_status"] = (
        "smokes" if message.text == "–î–∞" else ("never smoked" if message.text == "–ù–µ—Ç" else "formerly smoked")
    )
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥–µ–ª–∏
    data = {
        "gender": user_data[chat_id]["gender"],
        "age": user_data[chat_id]["age"],
        "hypertension": user_data[chat_id]["hypertension"],
        "heart_disease": user_data[chat_id]["heart_disease"],
        "ever_married": user_data[chat_id]["ever_married"],
        "work_type": user_data[chat_id]["work_type"],
        "Residence_type": user_data[chat_id]["Residence_type"],
        "avg_glucose_level": user_data[chat_id].get("avg_glucose_level"),
        "bmi": user_data[chat_id].get("bmi"),
        "smoking_status": user_data[chat_id]["smoking_status"],
    }
    
    # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ 
    probability, risk_level = predict_stroke_risk(data)
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–ø–æ—Ç–æ–º —Ç—É—Ç –º–± –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞–¥–æ)
    save_user_data(chat_id, data, probability)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    response = (
        f"üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ü–µ–Ω–∫–∏ —Ä–∏—Å–∫–∞ –∏–Ω—Å—É–ª—å—Ç–∞:\n\n"
        f"‚Ä¢ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {probability*100:.1f}%\n"
        f"‚Ä¢ –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: {risk_level}\n\n"
    )
    
    if risk_level in ["–í—ã—Å–æ–∫–∏–π", "–ö—Ä–∞–π–Ω–µ –≤—ã—Å–æ–∫–∏–π"]:
        response += "‚ùó –°—Ä–æ—á–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤—Ä–∞—á—É –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è!\n"
    elif risk_level == "–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π":
        response += "‚ö† –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n"
    else:
        response += "‚úÖ –í–∞—à —Ä–∏—Å–∫ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã, –Ω–æ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è –≤–∞–∂–Ω—ã.\n"
        
    response += "\nüîπ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
    if data.get("hypertension") == 1:
            response += ("üìå –£ –≤–∞—Å –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏—è.\n"
                       "  - –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Å–æ–ª–∏ –¥–æ 3-5 –≥/—Å—É—Ç–∫–∏\n"
                       "  - –ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã —Å—Ç—Ä–æ–≥–æ –ø–æ —Å—Ö–µ–º–µ\n"
                       "  - –†–µ–≥—É–ª—è—Ä–Ω–æ –ø–æ—Å–µ—â–∞–π—Ç–µ –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∞ (–º–∏–Ω–∏–º—É–º 2 —Ä–∞–∑–∞ –≤ –≥–æ–¥)\n\n")
        
    if data.get("heart_disease") == 1:
        response += ("ü´Ä –£ –≤–∞—Å –±–æ–ª–µ–∑–Ω–∏ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã. –í–∞–∂–Ω–æ:\n"
                    "  - –ü—Ä–æ—Ö–æ–¥–∏—Ç—å –≠–ö–ì-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ 1 —Ä–∞–∑ –≤ 3 –º–µ—Å—è—Ü–∞\n"
                    "  - –í–µ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫ –¥–∞–≤–ª–µ–Ω–∏—è –∏ –ø—É–ª—å—Å–∞\n"
                    "  - –ò–∑–±–µ–≥–∞—Ç—å —Å—Ç—Ä–µ—Å—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π\n"
                    "  - –ò–º–µ—Ç—å –ø—Ä–∏ —Å–µ–±–µ –Ω–∏—Ç—Ä–æ–≥–ª–∏—Ü–µ—Ä–∏–Ω (–µ—Å–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω –≤—Ä–∞—á–æ–º)\n\n")    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ä–æ–≤–Ω—è –≥–ª—é–∫–æ–∑—ã
    if data.get("avg_glucose_level") is not None and data.get("avg_glucose_level") > 5.5:
        response += ("üëÄ –í–∏–∂—É, —É –≤–∞—Å –ø–æ–≤—ã—à–µ–Ω —É—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã (–Ω–æ—Ä–º–∞ 3.3-5.5). –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:\n"
                    "  - –°–Ω–∏–∑–∏—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Å–∞—Ö–∞—Ä–∞ –∏ –±—ã—Å—Ç—Ä—ã—Ö —É–≥–ª–µ–≤–æ–¥–æ–≤\n"
                    "  - –£–≤–µ–ª–∏—á–∏—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
                    "  - –ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–æ–º\n\n")
    elif data.get("avg_glucose_level") is None:
        response += "üëÄ –£—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã –Ω–µ —É–∫–∞–∑–∞–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ –ø—Ä–∏ –±–ª–∏–∂–∞–π—à–µ–º –≤–∏–∑–∏—Ç–µ –∫ –≤—Ä–∞—á—É.\n\n"
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É—Ä–µ–Ω–∏—è
    if data.get("smoking_status") == "smokes":
        response += ("ü´Å –ö—É—Ä–µ–Ω–∏–µ - —Å–µ—Ä—å–µ–∑–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä —Ä–∏—Å–∫–∞ –Ω–µ —Ç–æ–ª—å–∫–æ –∏–Ω—Å—É–ª—å—Ç–∞, –Ω–æ –∏ –º–Ω–æ–≥–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π.\n" 
                    "  - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∫–Ω–∏–≥—É –ê–ª–ª–µ–Ω–∞ –ö–∞—Ä—Ä–∞ '–õ—ë–≥–∫–∏–π —Å–ø–æ—Å–æ–± –±—Ä–æ—Å–∏—Ç—å –∫—É—Ä–∏—Ç—å'\n"
                    "  - –ï—Å–ª–∏ –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â—å—é\n\n")
    elif data.get("smoking_status") == "formerly smoked":
        response += "ü•≥ –ö—Ä—É—Ç–æ, —á—Ç–æ –≤—ã –±—Ä–æ—Å–∏–ª–∏ –∫—É—Ä–∏—Ç—å! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!\n\n"
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ò–ú–¢
    if data.get("bmi") is not None and data.get("bmi") > 25:
        response += ("üòî –ö–∞–∂–µ—Ç—Å—è, —É –≤–∞—Å –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º:\n"
                    "  - –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ —Å –¥–µ—Ñ–∏—Ü–∏—Ç–æ–º –∫–∞–ª–æ—Ä–∏–π\n"
                    "  - –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è –ª—é–±—ã–º –≤–∏–¥–æ–º —Å–ø–æ—Ä—Ç–∞\n"
                    "  - –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –¥–∏–µ—Ç–æ–ª–æ–≥–∞\n\n")
    elif data.get("bmi") is None:
        response += "üîç –ò–ú–¢ –Ω–µ —É–∫–∞–∑–∞–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑–º–µ—Ä–∏—Ç—å —Ä–æ—Å—Ç –∏ –≤–µ—Å –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞.\n\n"
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞
    if data.get("Residence_type") == 1:
        response += ("üòâ –ñ–∏—Ç—å –≤ –≥–æ—Ä–æ–¥–µ, –∫–æ–Ω–µ—á–Ω–æ, —É–¥–æ–±–Ω–æ, –Ω–æ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ:\n"
                    "  - –ü–æ—á–∞—â–µ –≥—É–ª—è–π—Ç–µ –≤ –ø–∞—Ä–∫–∞—Ö\n"
                    "  - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–ª—è –≤—ã–µ–∑–¥–∞ –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É\n"
                    "  - –û—Ç–¥–∞–≤–∞–π—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–µ—à–∏–º –ø—Ä–æ–≥—É–ª–∫–∞–º\n\n")
    else:
        response += "ü§© –í–∞—É, –∫—Ä—É—Ç–æ, —á—Ç–æ –≤—ã –∂–∏–≤–µ—Ç–µ –≤ —Å–µ–ª—å—Å–∫–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å–≤–µ–∂–µ–≥–æ –≤–æ–∑–¥—É—Ö–∞ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞.\n\n"
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    response += ("üí° –û–±—â–∏–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–∏—Å–∫–∞:\n"
                "- –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ\n"
                "- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
                "- –°–æ–±–ª—é–¥–∞–π—Ç–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–∏–µ—Ç—É\n"
                "- –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è\n"
                "- –£—Å—Ç—Ä–∞–Ω–∏—Ç–µ –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Å—Ç—Ä–µ—Å—Å–∞\n"
                "- –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –æ—Å–º–æ—Ç—Ä—ã\n")
    
    bot.send_message(
        chat_id,
        response,
        reply_markup=types.ReplyKeyboardRemove()
    )

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_new = types.KeyboardButton("–õ–µ—Å–≥–æ–æ–æ–æ")
    btn_exit = types.KeyboardButton("–ù–µ—Ç")
    markup.add(btn_new, btn_exit)

    bot.send_message(
        chat_id,
        "–•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å?",
        reply_markup=markup
    )

@safe_execute
@bot.message_handler(func=lambda message: message.text == "–õ–µ—Å–≥–æ–æ–æ–æ")
def new_record(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏"""
    chat_id = message.chat.id
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if chat_id in user_data:
        del user_data[chat_id]
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
    user_data[chat_id] = {}
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_male = types.KeyboardButton("–ú—É–∂—Å–∫–æ–π")
    btn_female = types.KeyboardButton("–ñ–µ–Ω—Å–∫–∏–π")
    markup.add(btn_male, btn_female)
    
    bot.send_message(
        chat_id,
        "–•–æ—Ä–æ—à–æ!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª:",
        reply_markup=markup
    )

@safe_execute
@bot.message_handler(func=lambda message: message.text == "–ù–µ—Ç")
def exit_bot(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã"""
    chat_id = message.chat.id
    if chat_id in user_data:
        del user_data[chat_id]
    
    bot.send_message(
        chat_id,
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞! –î–ª—è –Ω–æ–≤–æ–≥–æ –æ–ø—Ä–æ—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start",
        reply_markup=types.ReplyKeyboardRemove()
    )
    raise SystemExit


if __name__ == "__main__":
    init_db()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    get_last_user_data() # –ø–æ—Ç–æ–º –Ω–∞–¥–æ —É–±—Ä–∞—Ç—å
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...')
    bot.polling(none_stop=True)